
#### Setup ####

rm(list = ls(all.names = T)); gc()

library(data.table)
library(bit64)
library(ggplot2)

source("Scripts/Helpers.R")

load("Output/DTSample.RData")

DTFeature <- FillDT(DTFeature)

#### Compute Fields ####

setnames(DTFeature,
         c("acceleration_x", "acceleration_y", "acceleration_z", "Accuracy"),
         c("acc_x", "acc_y", "acc_z", "Acr"))

DTFeature[, `:=`(acc_xy = sqrt(acc_x ^ 2 +
                                 acc_y ^ 2),
                 acc_xyz = sqrt(acc_x ^ 2 +
                                  acc_y ^ 2 +
                                  acc_z ^ 2),
                 acc_x_d1 = acc_x - shift(acc_x, 1, NA, "lag"),
                 acc_y_d1 = acc_y - shift(acc_y, 1, NA, "lag"),
                 acc_z_d1 = acc_z - shift(acc_z, 1, NA, "lag"),
                 Bearing_d1 = Bearing - shift(Bearing, 1, NA, "lag"),
                 gyro_x_d1 = gyro_x - shift(gyro_x, 1, NA, "lag"),
                 gyro_y_d1 = gyro_y - shift(gyro_y, 1, NA, "lag"),
                 gyro_z_d1 = gyro_z - shift(gyro_z, 1, NA, "lag"),
                 Acr_d1    = Acr - shift(Acr, 1, NA, "lag"))]

DTFeature[, Bearing_d1 := abs(Bearing_d1)]
DTFeature[Bearing_d1 > 180, Bearing_d1 := 360 - Bearing_d1]

DTFeature[, `:=`(acc_xy_d1 = acc_xy - shift(acc_xy, 1, NA, "lag"),
                 acc_xyz_d1 = acc_xyz - shift(acc_xyz, 1, NA, "lag"))]

# Define Local Minima and Local Maxima

DTFeature[, `:=`(Speed_Lg1 = shift(Speed, 1, type = "lag"),
                 Speed_Lg2 = shift(Speed, 2, type = "lag"),
                 Speed_Lg3 = shift(Speed, 3, type = "lag"),
                 Speed_Ld1 = shift(Speed, 1, type = "lead"),
                 Speed_Ld2 = shift(Speed, 2, type = "lead"),
                 Speed_Ld3 = shift(Speed, 3, type = "lead"))]

# Identify Local Max
DTFeature[, LocalMax := 0]
DTFeature[Speed > pmax(Speed_Lg1, Speed_Lg2, Speed_Lg3) &
            Speed > pmax(Speed_Ld1, Speed_Ld2, Speed_Ld3),
          LocalMax := 1]
DTFeature[is.na(Speed_Lg1) & is.na(Speed_Lg2) & is.na(Speed_Lg3) &
            Speed > pmax(Speed_Ld1, Speed_Ld2, Speed_Ld3),
          LocalMax := 1]
DTFeature[Speed > pmax(Speed_Lg1, Speed_Lg2, Speed_Lg3) &
            is.na(Speed_Ld1) & is.na(Speed_Ld2) & is.na(Speed_Ld3),
          LocalMax := 1]

# Identify Local Min
DTFeature[, LocalMin := 0]
DTFeature[Speed < pmin(Speed_Lg1, Speed_Lg2, Speed_Lg3) &
            Speed < pmin(Speed_Ld1, Speed_Ld2, Speed_Ld3),
          LocalMin := 1]
DTFeature[is.na(Speed_Lg1) & is.na(Speed_Lg2) & is.na(Speed_Lg3) &
            Speed < pmin(Speed_Ld1, Speed_Ld2, Speed_Ld3),
          LocalMin := 1]
DTFeature[Speed < pmin(Speed_Lg1, Speed_Lg2, Speed_Lg3) &
            is.na(Speed_Ld1) & is.na(Speed_Ld2) & is.na(Speed_Ld3),
          LocalMin := 1]

# Identify Stops
DTFeature[, Stop := 0]
DTFeature[Speed == 0, Stop := 1]
DTFeature[Speed < 0.2 & Speed_Lg1 == 0 & Speed_Ld1 == 0, Stop := 1]
DTFeature[Speed < 0.2 & Speed_Lg2 == 0 & Speed_Ld2 == 0, Stop := 1]
DTFeature[Speed < 0.2 & Speed_Lg3 == 0 & Speed_Ld3 == 0, Stop := 1]

DTFeature[, Stop_start := 0]
DTFeature[, Stop_end := 0]

DTFeature[Stop == 1 & shift(Stop, 1, type = "lag") == 0, Stop_start := 1]
DTFeature[Stop == 1 & shift(Stop, 1, type = "lead") == 0, Stop_end := 1]

# Identify Stages (Accelerating or Decelerating)
DTFeature[, Acc := 0]
DTFeature[, Dec := 0]

# Faster than Lag, Slower than Lead
DTFeature[Speed > pmax(Speed_Lg1, Speed_Lg2, Speed_Lg3) |
            Speed < pmin(Speed_Ld1, Speed_Ld2, Speed_Ld3), Acc := 1]

# Slower than Lag, Faster than Lead
DTFeature[Speed < pmin(Speed_Lg1, Speed_Lg2, Speed_Lg3) |
            Speed > pmax(Speed_Ld1, Speed_Ld2, Speed_Ld3), Dec := 1]

# Deal with Accuracy (clustering around 3, 3.9, 4, 5, 6, 8, 10, 12, 16, 32)

DTFeature[, `:=`(Acr_03 = 0, Acr_039 = 0, Acr_04 = 0, Acr_05 = 0,
                 Acr_06 = 0, Acr_08  = 0, Acr_10 = 0, Acr_12 = 0,
                 Acr_16 = 0, Acr_32  = 0,
                 Acr_03_stop = 0)]

DTFeature[Acr == 3,   Acr_03  := 1]
DTFeature[Acr == 3.9, Acr_039 := 1]
DTFeature[Acr == 4,   Acr_04  := 1]
DTFeature[Acr == 5,   Acr_05  := 1]
DTFeature[Acr == 6,   Acr_06  := 1]
DTFeature[Acr == 8,   Acr_08  := 1]
DTFeature[Acr == 10,  Acr_10  := 1]
DTFeature[Acr == 12,  Acr_12  := 1]
DTFeature[Acr == 16,  Acr_16  := 1]
DTFeature[Acr == 32,  Acr_32  := 1]
DTFeature[Acr == 3 & Stop == 1, Acr_03_stop  := 1]

# Define some possible anomalies

DTFeature[, Anomaly1 := 0]
DTFeature[, Anomaly2 := 0]

DTFeature[Speed == -1, Anomaly1 := 1]
DTFeature[Speed == -1 & Bearing == 0, Anomaly2 := 1]

DTFeature <- DTFeature[PlaceHolder == 1, ]

#### Compute Stage Based Features ####

## Compute features based on all rows first, then subset DT

DT1 <- DTFeature[, .(LocalMin_N = sum(LocalMin, na.rm = T),
                     LocalMax_N = sum(LocalMax, na.rm = T),
                     Stop_N     = sum(Stop_start, na.rm = T),
                     Stop_sec   = sum(Stop, na.rm = T),
                     Duration   = max(second, na.rm = T) + 1,
                     Anomaly1   = sum(Anomaly1, na.rm = T),
                     Anomaly2   = sum(Anomaly2, na.rm = T),
                     Acr_03     = mean(Acr_03,  na.rm = T),
                     Acr_039    = mean(Acr_039, na.rm = T),
                     Acr_04     = mean(Acr_04,  na.rm = T),
                     Acr_05     = mean(Acr_05,  na.rm = T),
                     Acr_06     = mean(Acr_06,  na.rm = T),
                     Acr_08     = mean(Acr_08,  na.rm = T),
                     Acr_10     = mean(Acr_10,  na.rm = T),
                     Acr_12     = mean(Acr_12,  na.rm = T),
                     Acr_16     = mean(Acr_16,  na.rm = T),
                     Acr_32     = mean(Acr_32,  na.rm = T),
                     Acr_03_stop = mean(Acr_03_stop, na.rm = T),
                     Acr_d1_mean = mean(Acr_d1, na.rm = T),
                     Acr_d1_max  = max(Acr_d1, na.rm = T),
                     Acr_d1_sd   = sd(Acr_d1, na.rm = T)), bookingID]

# DT for Local Min
DT2 <- DTFeature[(LocalMin == 1 & Anomaly1 == 0 & Anomaly2 == 0), ]

DT2 <- DT2[, .(Speed_LMin_mean     = mean(Speed, na.rm = T),
               Speed_Lg1_LMin_mean = mean(Speed_Lg1, na.rm = T),
               Speed_Lg2_LMin_mean = mean(Speed_Lg2, na.rm = T),
               Speed_Lg3_LMin_mean = mean(Speed_Lg3, na.rm = T),
               Speed_Ld1_LMin_mean = mean(Speed_Ld1, na.rm = T),
               Speed_Ld2_LMin_mean = mean(Speed_Ld2, na.rm = T),
               Speed_Ld3_LMin_mean = mean(Speed_Ld3, na.rm = T),
               Speed_LMin_sd     = sd(Speed, na.rm = T),
               Speed_Lg1_LMin_sd = sd(Speed_Lg1, na.rm = T),
               Speed_Lg2_LMin_sd = sd(Speed_Lg2, na.rm = T),
               Speed_Lg3_LMin_sd = sd(Speed_Lg3, na.rm = T),
               Speed_Ld1_LMin_sd = sd(Speed_Ld1, na.rm = T),
               Speed_Ld2_LMin_sd = sd(Speed_Ld2, na.rm = T),
               Speed_Ld3_LMin_sd = sd(Speed_Ld3, na.rm = T),
               Speed_LMin_max     = max(Speed, na.rm = T),
               Speed_Lg1_LMin_max = max(Speed_Lg1, na.rm = T),
               Speed_Lg2_LMin_max = max(Speed_Lg2, na.rm = T),
               Speed_Lg3_LMin_max = max(Speed_Lg3, na.rm = T),
               Speed_Ld1_LMin_max = max(Speed_Ld1, na.rm = T),
               Speed_Ld2_LMin_max = max(Speed_Ld2, na.rm = T),
               Speed_Ld3_LMin_max = max(Speed_Ld3, na.rm = T)), bookingID]

# DT for Local Max
DT3 <- DTFeature[(LocalMax == 1 & Anomaly1 == 0 & Anomaly2 == 0), ]

DT3 <- DT3[, .(Speed_LMax_mean     = mean(Speed, na.rm = T),
               Speed_Lg1_LMax_mean = mean(Speed_Lg1, na.rm = T),
               Speed_Lg2_LMax_mean = mean(Speed_Lg2, na.rm = T),
               Speed_Lg3_LMax_mean = mean(Speed_Lg3, na.rm = T),
               Speed_Ld1_LMax_mean = mean(Speed_Ld1, na.rm = T),
               Speed_Ld2_LMax_mean = mean(Speed_Ld2, na.rm = T),
               Speed_Ld3_LMax_mean = mean(Speed_Ld3, na.rm = T),
               Speed_LMax_sd     = sd(Speed, na.rm = T),
               Speed_Lg1_LMax_sd = sd(Speed_Lg1, na.rm = T),
               Speed_Lg2_LMax_sd = sd(Speed_Lg2, na.rm = T),
               Speed_Lg3_LMax_sd = sd(Speed_Lg3, na.rm = T),
               Speed_Ld1_LMax_sd = sd(Speed_Ld1, na.rm = T),
               Speed_Ld2_LMax_sd = sd(Speed_Ld2, na.rm = T),
               Speed_Ld3_LMax_sd = sd(Speed_Ld3, na.rm = T),
               Speed_LMax_max     = max(Speed, na.rm = T),
               Speed_Lg1_LMax_max = max(Speed_Lg1, na.rm = T),
               Speed_Lg2_LMax_max = max(Speed_Lg2, na.rm = T),
               Speed_Lg3_LMax_max = max(Speed_Lg3, na.rm = T),
               Speed_Ld1_LMax_max = max(Speed_Ld1, na.rm = T),
               Speed_Ld2_LMax_max = max(Speed_Ld2, na.rm = T),
               Speed_Ld3_LMax_max = max(Speed_Ld3, na.rm = T)), bookingID]

# DT for Stop Start
DT4 <- DTFeature[(Stop_start == 1 & Anomaly1 == 0 & Anomaly2 == 0), ]

DT4 <- DT4[, .(Speed_Lg1_SS_mean = mean(Speed_Lg1, na.rm = T),
               Speed_Lg2_SS_mean = mean(Speed_Lg2, na.rm = T),
               Speed_Lg3_SS_mean = mean(Speed_Lg3, na.rm = T),
               Speed_Lg1_SS_sd   = sd(Speed_Lg1, na.rm = T),
               Speed_Lg2_SS_sd   = sd(Speed_Lg2, na.rm = T),
               Speed_Lg3_SS_sd   = sd(Speed_Lg3, na.rm = T),
               Speed_Lg1_SS_max  = max(Speed_Lg1, na.rm = T),
               Speed_Lg2_SS_max  = max(Speed_Lg2, na.rm = T),
               Speed_Lg3_SS_max  = max(Speed_Lg3, na.rm = T)), bookingID]

# DT for Stop End
DT5 <- DTFeature[(Stop_end == 1 & Anomaly1 == 0 & Anomaly2 == 0), ]

DT5 <- DT5[, .(Speed_Lg1_SE_mean = mean(Speed_Lg1, na.rm = T),
               Speed_Lg2_SE_mean = mean(Speed_Lg2, na.rm = T),
               Speed_Lg3_SE_mean = mean(Speed_Lg3, na.rm = T),
               Speed_Lg1_SE_sd   = sd(Speed_Lg1, na.rm = T),
               Speed_Lg2_SE_sd   = sd(Speed_Lg2, na.rm = T),
               Speed_Lg3_SE_sd   = sd(Speed_Lg3, na.rm = T),
               Speed_Lg1_SE_max  = max(Speed_Lg1, na.rm = T),
               Speed_Lg2_SE_max  = max(Speed_Lg2, na.rm = T),
               Speed_Lg3_SE_max  = max(Speed_Lg3, na.rm = T)), bookingID]

# DT for Accelerating
DT6 <- DTFeature[(Acc == 1 & Anomaly1 == 0 & Anomaly2 == 0), ]

DT6 <- DT6[, .(acc_x_Acc_mean   = mean(acc_x, na.rm = T),
               acc_y_Acc_mean   = mean(acc_y, na.rm = T),
               acc_z_Acc_mean   = mean(acc_z, na.rm = T),
               acc_xy_Acc_mean  = mean(acc_xy, na.rm = T),
               acc_xyz_Acc_mean = mean(acc_xyz, na.rm = T),
               gyro_x_Acc_mean  = mean(gyro_x, na.rm = T),
               gyro_y_Acc_mean  = mean(gyro_y, na.rm = T),
               gyro_z_Acc_mean  = mean(gyro_z, na.rm = T),
               
               acc_x_Acc_sd   = sd(acc_x, na.rm = T),
               acc_y_Acc_sd   = sd(acc_y, na.rm = T),
               acc_z_Acc_sd   = sd(acc_z, na.rm = T),
               acc_xy_Acc_sd  = sd(acc_xy, na.rm = T),
               acc_xyz_Acc_sd = sd(acc_xyz, na.rm = T),
               gyro_x_Acc_sd  = sd(gyro_x, na.rm = T),
               gyro_y_Acc_sd  = sd(gyro_y, na.rm = T),
               gyro_z_Acc_sd  = sd(gyro_z, na.rm = T),
               
               acc_x_Acc_max   = max(acc_x, na.rm = T),
               acc_y_Acc_max   = max(acc_y, na.rm = T),
               acc_z_Acc_max   = max(acc_z, na.rm = T),
               acc_xy_Acc_max  = max(acc_xy, na.rm = T),
               acc_xyz_Acc_max = max(acc_xyz, na.rm = T),
               gyro_x_Acc_max  = max(gyro_x, na.rm = T),
               gyro_y_Acc_max  = max(gyro_y, na.rm = T),
               gyro_z_Acc_max  = max(gyro_z, na.rm = T),
               
               acc_x_d1_Acc_mean   = mean(acc_x_d1, na.rm = T),
               acc_y_d1_Acc_mean   = mean(acc_y_d1, na.rm = T),
               acc_z_d1_Acc_mean   = mean(acc_z_d1, na.rm = T),
               acc_xy_d1_Acc_mean  = mean(acc_xy_d1, na.rm = T),
               acc_xyz_d1_Acc_mean = mean(acc_xyz_d1, na.rm = T),
               gyro_x_d1_Acc_mean  = mean(gyro_x_d1, na.rm = T),
               gyro_y_d1_Acc_mean  = mean(gyro_y_d1, na.rm = T),
               gyro_z_d1_Acc_mean  = mean(gyro_z_d1, na.rm = T),
               
               acc_x_d1_Acc_sd   = sd(acc_x_d1, na.rm = T),
               acc_y_d1_Acc_sd   = sd(acc_y_d1, na.rm = T),
               acc_z_d1_Acc_sd   = sd(acc_z_d1, na.rm = T),
               acc_xy_d1_Acc_sd  = sd(acc_xy_d1, na.rm = T),
               acc_xyz_d1_Acc_sd = sd(acc_xyz_d1, na.rm = T),
               gyro_x_d1_Acc_sd  = sd(gyro_x_d1, na.rm = T),
               gyro_y_d1_Acc_sd  = sd(gyro_y_d1, na.rm = T),
               gyro_z_d1_Acc_sd  = sd(gyro_z_d1, na.rm = T),
               
               acc_x_d1_Acc_max   = max(acc_x_d1, na.rm = T),
               acc_y_d1_Acc_max   = max(acc_y_d1, na.rm = T),
               acc_z_d1_Acc_max   = max(acc_z_d1, na.rm = T),
               acc_xy_d1_Acc_max  = max(acc_xy_d1, na.rm = T),
               acc_xyz_d1_Acc_max = max(acc_xyz_d1, na.rm = T),
               gyro_x_d1_Acc_max  = max(gyro_x_d1, na.rm = T),
               gyro_y_d1_Acc_max  = max(gyro_y_d1, na.rm = T),
               gyro_z_d1_Acc_max  = max(gyro_z_d1, na.rm = T)), bookingID]

# DT for Decelerating
DT7 <- DTFeature[(Dec == 1 & Anomaly1 == 0 & Anomaly2 == 0), ]

DT7 <- DT7[, .(acc_x_Dec_mean   = mean(acc_x, na.rm = T),
               acc_y_Dec_mean   = mean(acc_y, na.rm = T),
               acc_z_Dec_mean   = mean(acc_z, na.rm = T),
               acc_xy_Dec_mean  = mean(acc_xy, na.rm = T),
               acc_xyz_Dec_mean = mean(acc_xyz, na.rm = T),
               gyro_x_Dec_mean  = mean(gyro_x, na.rm = T),
               gyro_y_Dec_mean  = mean(gyro_y, na.rm = T),
               gyro_z_Dec_mean  = mean(gyro_z, na.rm = T),
               
               acc_x_Dec_sd   = sd(acc_x, na.rm = T),
               acc_y_Dec_sd   = sd(acc_y, na.rm = T),
               acc_z_Dec_sd   = sd(acc_z, na.rm = T),
               acc_xy_Dec_sd  = sd(acc_xy, na.rm = T),
               acc_xyz_Dec_sd = sd(acc_xyz, na.rm = T),
               gyro_x_Dec_sd  = sd(gyro_x, na.rm = T),
               gyro_y_Dec_sd  = sd(gyro_y, na.rm = T),
               gyro_z_Dec_sd  = sd(gyro_z, na.rm = T),
               
               acc_x_Dec_max   = max(acc_x, na.rm = T),
               acc_y_Dec_max   = max(acc_y, na.rm = T),
               acc_z_Dec_max   = max(acc_z, na.rm = T),
               acc_xy_Dec_max  = max(acc_xy, na.rm = T),
               acc_xyz_Dec_max = max(acc_xyz, na.rm = T),
               gyro_x_Dec_max  = max(gyro_x, na.rm = T),
               gyro_y_Dec_max  = max(gyro_y, na.rm = T),
               gyro_z_Dec_max  = max(gyro_z, na.rm = T),
               
               acc_x_d1_Dec_mean   = mean(acc_x_d1, na.rm = T),
               acc_y_d1_Dec_mean   = mean(acc_y_d1, na.rm = T),
               acc_z_d1_Dec_mean   = mean(acc_z_d1, na.rm = T),
               acc_xy_d1_Dec_mean  = mean(acc_xy_d1, na.rm = T),
               acc_xyz_d1_Dec_mean = mean(acc_xyz_d1, na.rm = T),
               gyro_x_d1_Dec_mean  = mean(gyro_x_d1, na.rm = T),
               gyro_y_d1_Dec_mean  = mean(gyro_y_d1, na.rm = T),
               gyro_z_d1_Dec_mean  = mean(gyro_z_d1, na.rm = T),
               
               acc_x_d1_Dec_sd   = sd(acc_x_d1, na.rm = T),
               acc_y_d1_Dec_sd   = sd(acc_y_d1, na.rm = T),
               acc_z_d1_Dec_sd   = sd(acc_z_d1, na.rm = T),
               acc_xy_d1_Dec_sd  = sd(acc_xy_d1, na.rm = T),
               acc_xyz_d1_Dec_sd = sd(acc_xyz_d1, na.rm = T),
               gyro_x_d1_Dec_sd  = sd(gyro_x_d1, na.rm = T),
               gyro_y_d1_Dec_sd  = sd(gyro_y_d1, na.rm = T),
               gyro_z_d1_Dec_sd  = sd(gyro_z_d1, na.rm = T),
               
               acc_x_d1_Dec_max   = max(acc_x_d1, na.rm = T),
               acc_y_d1_Dec_max   = max(acc_y_d1, na.rm = T),
               acc_z_d1_Dec_max   = max(acc_z_d1, na.rm = T),
               acc_xy_d1_Dec_max  = max(acc_xy_d1, na.rm = T),
               acc_xyz_d1_Dec_max = max(acc_xyz_d1, na.rm = T),
               gyro_x_d1_Dec_max  = max(gyro_x_d1, na.rm = T),
               gyro_y_d1_Dec_max  = max(gyro_y_d1, na.rm = T),
               gyro_z_d1_Dec_max  = max(gyro_z_d1, na.rm = T)), bookingID]

rm(DTFeature)

## Merge the tables

setkey(DT1, bookingID)
setkey(DT2, bookingID)
setkey(DT3, bookingID)
setkey(DT4, bookingID)
setkey(DT5, bookingID)
setkey(DT6, bookingID)
setkey(DT7, bookingID)

DT1 <- DT2[DT1]
DT1 <- DT3[DT1]
DT1 <- DT4[DT1]
DT1 <- DT5[DT1]
DT1 <- DT6[DT1]
DT1 <- DT7[DT1]

